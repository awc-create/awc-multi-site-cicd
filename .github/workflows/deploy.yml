name: Multi-Site Deployment

on:
  push:
    branches:
      - main
  repository_dispatch:

permissions:
  contents: read
  actions: write
  issues: write

jobs:
  detect-project-type:
    runs-on: ubuntu-latest
    outputs:
      project_type: ${{ steps.detect.outputs.PROJECT_TYPE }}
    steps:
      - name: Checkout Project Repo
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.client_payload.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          ref: main

      - name: Verify package.json
        run: |
          if [ ! -f "package.json" ]; then
            echo "Error: package.json not found!" && exit 1
          fi

      - name: Read `.cicd-config.yml` (if exists)
        id: detect
        run: |
          PROJECT_TYPE="static"
          [ -f ".cicd-config.yml" ] && PROJECT_TYPE=$(grep "project_type:" .cicd-config.yml | awk '{print $2}')
          [ -f "*.tf" ] && PROJECT_TYPE="terraform"
          echo "::set-output name=PROJECT_TYPE::$PROJECT_TYPE"

  static_pipeline:
    needs: detect-project-type
    if: needs.detect-project-type.outputs.project_type == 'static'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project Repo
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.client_payload.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Find Next.js Project Directory and Build
        run: |
          pwd
          ls -la
          NEXT_DIR=$(find . -name 'next.config.js' -exec dirname {} \; | head -n 1)
          if [ -z "$NEXT_DIR" ]; then
            echo "next.config.js not found in any subdirectory!" && exit 1
          fi
          cd "$NEXT_DIR"
          echo "Found Next.js directory: $NEXT_DIR"
          npm install
          npm run build

      - name: Run Unit Tests
        run: npm test || echo "No tests found, skipping..."

      - name: Deploy to Vercel
        run: |
          NEXT_DIR=$(find . -name 'next.config.js' -exec dirname {} \; | head -n 1)
          cd "$NEXT_DIR"
          vercel --prod --token=${{ secrets.VERCEL_TOKEN }}
